import { PrismaClient } from '@prisma/client';
import dotenv from 'dotenv';

dotenv.config();

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Prisma Client
export const prisma = new PrismaClient({
  log: process.env['NODE_ENV'] === 'development' ? ['query', 'error', 'warn'] : ['error'],
});

export const connectDatabase = async (): Promise<void> => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await prisma.$connect();
    console.log('‚úÖ Connected to PostgreSQL successfully');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    prisma.$on('query', (e: any) => {
      if (process.env['NODE_ENV'] === 'development') {
        console.log('Query: ' + e.query);
        console.log('Params: ' + e.params);
        console.log('Duration: ' + e.duration + 'ms');
      }
    });
    
    
  } catch (error) {
    console.error('‚ùå Failed to connect to PostgreSQL:', error);
    throw error;
  }
};

export const disconnectDatabase = async (): Promise<void> => {
  try {
    await prisma.$disconnect();
    console.log('üì¥ Disconnected from PostgreSQL');
  } catch (error) {
    console.error('‚ùå Error disconnecting from PostgreSQL:', error);
  }
};
