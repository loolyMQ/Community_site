const bcrypt = require('bcryptjs');
const crypto = require('crypto');

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∏–ª—å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
const generateSecurePassword = () => {
  const length = 16;
  const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
  let password = '';
  
  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
  password += 'A'; // –ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞
  password += 'a'; // –°—Ç—Ä–æ—á–Ω–∞—è –±—É–∫–≤–∞
  password += '1'; // –¶–∏—Ñ—Ä–∞
  password += '!'; // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
  for (let i = 4; i < length; i++) {
    password += charset.charAt(Math.floor(Math.random() * charset.length));
  }
  
  // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
  return password.split('').sort(() => Math.random() - 0.5).join('');
};

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT —Å–µ–∫—Ä–µ—Ç—ã
const generateJWTSecret = () => {
  return crypto.randomBytes(64).toString('base64');
};

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ —Ö–µ—à–∏
const generateCredentials = async () => {
  console.log('üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n');
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
  const adminPassword = generateSecurePassword();
  const moderatorPassword = generateSecurePassword();
  
  // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏ —Å 14 —Ä–∞—É–Ω–¥–∞–º–∏
  const adminHash = await bcrypt.hash(adminPassword, 14);
  const moderatorHash = await bcrypt.hash(moderatorPassword, 14);
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT —Å–µ–∫—Ä–µ—Ç—ã
  const jwtSecret = generateJWTSecret();
  const jwtRefreshSecret = generateJWTSecret();
  const sessionSecret = generateJWTSecret();
  
  console.log('üìã –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ï –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï:');
  console.log('=====================================');
  console.log('\nüë§ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†:');
  console.log(`Email: admin@university.edu`);
  console.log(`–ü–∞—Ä–æ–ª—å: ${adminPassword}`);
  console.log(`–•–µ—à: ${adminHash}`);
  
  console.log('\nüë§ –ú–û–î–ï–†–ê–¢–û–†:');
  console.log(`Email: moderator@university.edu`);
  console.log(`–ü–∞—Ä–æ–ª—å: ${moderatorPassword}`);
  console.log(`–•–µ—à: ${moderatorHash}`);
  
  console.log('\nüîë JWT –°–ï–ö–†–ï–¢–´:');
  console.log(`JWT_SECRET=${jwtSecret}`);
  console.log(`JWT_REFRESH_SECRET=${jwtRefreshSecret}`);
  console.log(`SESSION_SECRET=${sessionSecret}`);
  
  console.log('\nüìù –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:');
  console.log('=====================================');
  console.log(`# Admin Credentials (—Ö—ç—à–∏ bcrypt)`);
  console.log(`ADMIN_EMAIL=admin@university.edu`);
  console.log(`ADMIN_PASSWORD_HASH=${adminHash}`);
  console.log(`MODERATOR_EMAIL=moderator@university.edu`);
  console.log(`MODERATOR_PASSWORD_HASH=${moderatorHash}`);
  console.log(`\n# JWT Configuration`);
  console.log(`JWT_SECRET=${jwtSecret}`);
  console.log(`JWT_REFRESH_SECRET=${jwtRefreshSecret}`);
  console.log(`SESSION_SECRET=${sessionSecret}`);
  
  console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï:');
  console.log('1. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ');
  console.log('2. –û–±–Ω–æ–≤–∏—Ç–µ .env.local —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ —Ö–µ—à–∞–º–∏');
  console.log('3. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ git');
  console.log('4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞');
  
  return {
    adminPassword,
    moderatorPassword,
    adminHash,
    moderatorHash,
    jwtSecret,
    jwtRefreshSecret,
    sessionSecret
  };
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateCredentials().catch(console.error);
