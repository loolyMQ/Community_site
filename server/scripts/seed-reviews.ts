import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function seedReviews() {
  try {
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    await prisma.review.deleteMany({});
    await prisma.community.deleteMany({});
    await prisma.user.deleteMany({});
    console.log('üóëÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await Promise.all([
      prisma.user.create({
        data: {
          email: 'user1@test.com',
          password: 'hashedpassword',
          name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
          role: 'STUDENT'
        }
      }),
      prisma.user.create({
        data: {
          email: 'user2@test.com',
          password: 'hashedpassword',
          name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
          role: 'STUDENT'
        }
      }),
      prisma.user.create({
        data: {
          email: 'user3@test.com',
          password: 'hashedpassword',
          name: '–î–º–∏—Ç—Ä–∏–π –ò–≤–∞–Ω–æ–≤',
          role: 'STUDENT'
        }
      })
    ]);

    console.log(`üë• –°–æ–∑–¥–∞–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
    const communities = await Promise.all([
      prisma.community.create({
        data: {
          name: '–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
          description: '–û–±—â–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
          shortDescription: '–ú–µ—Å—Ç–æ –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è',
          leaderId: users[0].id,
          categoryIds: ['1', '2']
        }
      }),
      prisma.community.create({
        data: {
          name: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤',
          description: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤',
          shortDescription: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
          leaderId: users[1].id,
          categoryIds: ['3']
        }
      }),
      prisma.community.create({
        data: {
          name: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤',
          description: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤',
          shortDescription: '–î–∏–∑–∞–π–Ω –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
          leaderId: users[2].id,
          categoryIds: ['4']
        }
      }),
      prisma.community.create({
        data: {
          name: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π',
          description: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –±–∏–∑–Ω–µ—Å-–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤',
          shortDescription: '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Å—Ç–∞—Ä—Ç–∞–ø—ã',
          leaderId: users[0].id,
          categoryIds: ['5']
        }
      }),
      prisma.community.create({
        data: {
          name: '–ù–∞—É—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
          description: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π',
          shortDescription: '–ù–∞—É–∫–∞ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
          leaderId: users[1].id,
          categoryIds: ['6']
        }
      })
    ]);

    console.log(`üè¢ –°–æ–∑–¥–∞–Ω–æ ${communities.length} —Å–æ–æ–±—â–µ—Å—Ç–≤`);

    // –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã
    const testReviews = [
      {
        content: '–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ! –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –æ—á–µ–Ω—å –æ—Ç–∑—ã–≤—á–∏–≤—ã–µ –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å.',
        rating: 5,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[0].id,
        userId: users[0].id
      },
      {
        content: '–•–æ—Ä–æ—à–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, –Ω–æ –∏–Ω–æ–≥–¥–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –í —Ü–µ–ª–æ–º –¥–æ–≤–æ–ª–µ–Ω —É—á–∞—Å—Ç–∏–µ–º –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ.',
        rating: 4,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[0].id,
        userId: users[1].id
      },
      {
        content: '–ú–Ω–µ –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è —ç—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ! –ó–¥–µ—Å—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.',
        rating: 5,
        isAnonymous: true,
        isPublished: true,
        communityId: communities[0].id
      },
      {
        content: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ - –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä! –ú–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.',
        rating: 5,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[1].id,
        userId: users[0].id
      },
      {
        content: '–•–æ—Ä–æ—à–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –º–∏—Ç–∞–ø—ã –∏ —Ö–∞–∫–∞—Ç–æ–Ω—ã.',
        rating: 4,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[1].id,
        userId: users[1].id
      },
      {
        content: '–û—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –æ–±—â–µ–Ω–∏—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏.',
        rating: 5,
        isAnonymous: true,
        isPublished: true,
        communityId: communities[1].id
      },
      {
        content: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤ - –∫—Ä–µ–∞—Ç–∏–≤–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ –º–Ω–æ–≥–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è!',
        rating: 5,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[2].id,
        userId: users[0].id
      },
      {
        content: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–æ—Ä–∫—à–æ–ø—ã –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º –¥–∏–∑–∞–π–Ω–µ—Ä–∞–º.',
        rating: 4,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[2].id,
        userId: users[1].id
      },
      {
        content: '–•–æ—Ä–æ—à–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π.',
        rating: 3,
        isAnonymous: true,
        isPublished: true,
        communityId: communities[2].id
      },
      {
        content: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π - –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ –∏–¥–µ–π –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.',
        rating: 5,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[3].id,
        userId: users[0].id
      },
      {
        content: '–û—Ç–ª–∏—á–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–∞ –∏ –æ–±–º–µ–Ω–∞ –æ–ø—ã—Ç–æ–º.',
        rating: 4,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[3].id,
        userId: users[1].id
      },
      {
        content: '–ú–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–ø–∏–∫–µ—Ä–æ–≤ –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á.',
        rating: 5,
        isAnonymous: true,
        isPublished: true,
        communityId: communities[3].id
      },
      {
        content: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ —É—á–µ–Ω—ã—Ö - –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å–∫—É—Å—Å–∏–π –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.',
        rating: 5,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[4].id,
        userId: users[0].id
      },
      {
        content: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–∞—É—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏.',
        rating: 4,
        isAnonymous: false,
        isPublished: true,
        communityId: communities[4].id,
        userId: users[1].id
      },
      {
        content: '–•–æ—Ä–æ—à–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –¥–ª—è –Ω–∞—É—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è.',
        rating: 4,
        isAnonymous: true,
        isPublished: true,
        communityId: communities[4].id
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã
    for (const reviewData of testReviews) {
      const reviewCreateData: any = {
        content: reviewData.content,
        rating: reviewData.rating,
        isAnonymous: reviewData.isAnonymous,
        isPublished: reviewData.isPublished,
        communityId: reviewData.communityId
      };

      if (!reviewData.isAnonymous && reviewData.userId) {
        reviewCreateData.userId = reviewData.userId;
      }

      await prisma.review.create({
        data: reviewCreateData
      });
    }

    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${testReviews.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);

    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalReviews = await prisma.review.count();
    const publishedReviews = await prisma.review.count({
      where: { isPublished: true }
    });
    const anonymousReviews = await prisma.review.count({
      where: { isAnonymous: true }
    });

    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤:');
    console.log(`üìù –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: ${totalReviews}`);
    console.log(`‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: ${publishedReviews}`);
    console.log(`üë§ –ê–Ω–æ–Ω–∏–º–Ω—ã—Ö: ${anonymousReviews}`);

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º
    const ratingStats = await prisma.review.groupBy({
      by: ['rating'],
      _count: {
        rating: true
      }
    });

    console.log('\n‚≠ê –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º:');
    ratingStats.forEach(stat => {
      const stars = '‚≠ê'.repeat(stat.rating);
      console.log(`${stars} (${stat.rating}): ${stat._count.rating} –æ—Ç–∑—ã–≤–æ–≤`);
    });

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞–º
    const communityStats = await prisma.review.groupBy({
      by: ['communityId'],
      _count: {
        communityId: true
      },
      _avg: {
        rating: true
      }
    });

    console.log('\nüè¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞–º:');
    for (const stat of communityStats) {
      const community = communities.find(c => c.id === stat.communityId);
      const communityName = community ? community.name : `–°–æ–æ–±—â–µ—Å—Ç–≤–æ ${stat.communityId}`;
      console.log(`${communityName}: ${stat._count.communityId} –æ—Ç–∑—ã–≤–æ–≤, —Å—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${stat._avg.rating?.toFixed(1)}‚≠ê`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedReviews(); 