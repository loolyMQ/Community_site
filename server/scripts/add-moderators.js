const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');
const crypto = require('crypto');

const prisma = new PrismaClient();

async function addModerators() {
  try {
    console.log('üîê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...\n');
    
    const moderators = [
      {
        email: 'moderator#0001@community.mephi.ru',
        password: '21d6d272a2de700c5f697721b1bdd8a3',
        name: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä 0001'
      },
      {
        email: 'moderator#0002@community.mephi.ru',
        password: '0e96ed115cba87e4cd5adab3bffaefe4',
        name: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä 0002'
      },
      {
        email: 'moderator#0003@community.mephi.ru',
        password: 'e65dbf98472a23e0ad8abae1f1c1b9dd',
        name: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä 0003'
      },
      {
        email: 'moderator#0004@community.mephi.ru',
        password: 'a3106a17f6f81a86bb5078433020f5d3',
        name: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä 0004'
      }
    ];
    
    for (const moderator of moderators) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —Å —Ç–∞–∫–∏–º email
      const existingUser = await prisma.user.findUnique({
        where: { email: moderator.email }
      });
      
      if (existingUser) {
        console.log(`‚ö†Ô∏è  –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä ${moderator.email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        continue;
      }
      
      // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
      const saltRounds = 12;
      const passwordHash = await bcrypt.hash(moderator.password, saltRounds);
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
      const newModerator = await prisma.user.create({
        data: {
          id: `moderator-${Date.now()}-${crypto.randomBytes(4).toString('hex')}`,
          email: moderator.email,
          password: passwordHash,
          role: 'MODERATOR',
          name: moderator.name,
          telegram: [],
          vk: [],
          website: [],
          other: []
        }
      });
      
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä: ${moderator.email}`);
    }
    
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const allModerators = await prisma.user.findMany({
      where: { role: 'MODERATOR' },
      select: { email: true, name: true, createdAt: true }
    });
    
    console.log(`\nüìã –í—Å–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ: ${allModerators.length}`);
    allModerators.forEach((mod, index) => {
      console.log(`${index + 1}. ${mod.email} (${mod.name}) - —Å–æ–∑–¥–∞–Ω: ${mod.createdAt.toLocaleDateString()}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addModerators();
