const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function resetDatabase() {
  try {
    console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ—Å—Ç–≤–∞–º–∏
    console.log('–£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ—Å—Ç–≤–∞–º–∏...');
    await prisma.communityRelationship.deleteMany({});
    console.log('‚úÖ –°–≤—è–∑–∏ —É–¥–∞–ª–µ–Ω—ã');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    console.log('–£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏...');
    await prisma.communityCategory.deleteMany({});
    console.log('‚úÖ –°–≤—è–∑–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —É–¥–∞–ª–µ–Ω—ã');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Ç–∑—ã–≤—ã
    console.log('–£–¥–∞–ª—è–µ–º –æ—Ç–∑—ã–≤—ã...');
    await prisma.review.deleteMany({});
    console.log('‚úÖ –û—Ç–∑—ã–≤—ã —É–¥–∞–ª–µ–Ω—ã');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (—Å–Ω–∞—á–∞–ª–∞, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å –≤–Ω–µ—à–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏)
    console.log('–£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...');
    await prisma.community.deleteMany({});
    console.log('‚úÖ –°–æ–æ–±—â–µ—Å—Ç–≤–∞ —É–¥–∞–ª–µ–Ω—ã');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤)
    console.log('–£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    await prisma.user.deleteMany({
      where: {
        role: {
          not: 'ADMIN'
        }
      }
    });
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('–£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    await prisma.category.deleteMany({});
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–¥–∞–ª–µ–Ω—ã');

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞!');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('\nüìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');

    const newCategories = [
      {
        name: '–°–±–æ—Ä–Ω—ã–µ',
        description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–±–æ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞',
        icon: 'üèÜ',
        color: '#FF6B6B',
        sortOrder: 1
      },
      {
        name: '–°–µ–∫—Ü–∏–∏',
        description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –∏ –∫—Ä—É–∂–∫–∏',
        icon: 'üîß',
        color: '#4ECDC4',
        sortOrder: 2
      },
      {
        name: '–ü—Ä–æ–µ–∫—Ç-—Å–æ–±—ã—Ç–∏—è',
        description: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤',
        icon: 'üé™',
        color: '#45B7D1',
        sortOrder: 3
      },
      {
        name: '–û–°–û',
        description: '–û—Ä–≥–∞–Ω —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        icon: 'üèõÔ∏è',
        color: '#96CEB4',
        sortOrder: 4
      },
      {
        name: '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        description: '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ',
        icon: 'ü§ù',
        color: '#FFEAA7',
        sortOrder: 5
      },
      {
        name: '–ù–∞—É–∫–∞',
        description: '–ù–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        icon: 'üî¨',
        color: '#DDA0DD',
        sortOrder: 6
      },
      {
        name: '–ú–µ–¥–∏–∞',
        description: '–°—Ä–µ–¥—Å—Ç–≤–∞ –º–∞—Å—Å–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏',
        icon: 'üì∫',
        color: '#98D8C8',
        sortOrder: 7
      },
      {
        name: '–ö–∞—Ä—å–µ—Ä–∞',
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
        icon: 'üíº',
        color: '#F7DC6F',
        sortOrder: 8
      },
      {
        name: '–ò—Å–∫—É—Å—Å—Ç–≤–æ',
        description: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        icon: 'üé®',
        color: '#BB8FCE',
        sortOrder: 9
      },
      {
        name: '–î–æ—Å—É–≥',
        description: '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –¥–æ—Å—É–≥–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        icon: 'üéÆ',
        color: '#85C1E9',
        sortOrder: 10
      }
    ];

    for (const category of newCategories) {
      const createdCategory = await prisma.category.create({
        data: {
          name: category.name,
          description: category.description,
          icon: category.icon,
          color: category.color,
          sortOrder: category.sortOrder,
          isActive: true
        }
      });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category.name} (ID: ${createdCategory.id})`);
    }

    console.log('\nüéâ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${newCategories.length}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

resetDatabase(); 