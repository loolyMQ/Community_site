const { PrismaClient } = require('../src/generated/prisma');

const prisma = new PrismaClient();

async function updateStudentTeamsDescription() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ—Ç—Ä—è–¥—ã"...');

    // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const category = await prisma.category.findFirst({
      where: {
        name: '–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ—Ç—Ä—è–¥—ã'
      }
    });

    if (!category) {
      console.log('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ—Ç—Ä—è–¥—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    const updatedCategory = await prisma.category.update({
      where: {
        id: category.id
      },
      data: {
        description: ''
      }
    });

    console.log(`‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ—Ç—Ä—è–¥—ã" –æ–±–Ω–æ–≤–ª–µ–Ω–æ!`);
    console.log(`üìä ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${updatedCategory.id}`);
    console.log(`üìù –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: "${updatedCategory.description}"`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateStudentTeamsDescription();
