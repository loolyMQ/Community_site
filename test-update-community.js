const axios = require('axios');

async function testUpdateCommunity() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤
    const communitiesResponse = await axios.get('http://localhost:3001/api/communities');
    const communities = communitiesResponse.data.data;
    
    if (communities.length === 0) {
      console.log('‚ùå –ù–µ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const testCommunity = communities[0];
    console.log(`üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ: ${testCommunity.name} (ID: ${testCommunity.id})`);
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categoriesResponse = await axios.get('http://localhost:3001/api/categories');
    const categories = categoriesResponse.data.data;
    
    if (categories.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const testCategory = categories[0];
    console.log(`üìÇ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${testCategory.name} (ID: ${testCategory.id})`);
    
    // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const updateData = {
      name: testCommunity.name + ' (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)',
      description: testCommunity.description + ' - –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ —Ç–µ—Å—Ç–µ',
      mainCategoryId: testCategory.id,
      categoryIds: [testCategory.id],
      contacts: {
        social: 'https://t.me/test_community'
      },
      leader: {
        name: '–¢–µ—Å—Ç–æ–≤—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å',
        social: 'https://t.me/test_leader'
      }
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', JSON.stringify(updateData, null, 2));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
    const updateResponse = await axios.put(`http://localhost:3001/api/communities/${testCommunity.id}`, updateData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer admin-token' // –í—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞
      }
    });
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', JSON.stringify(updateResponse.data, null, 2));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å
    const updatedResponse = await axios.get(`http://localhost:3001/api/communities/${testCommunity.id}`);
    const updatedCommunity = updatedResponse.data.data;
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ:');
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${updatedCommunity.name}`);
    console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${updatedCommunity.description}`);
    console.log(`   –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${updatedCommunity.mainCategoryId}`);
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${updatedCommunity.categories.map(c => c.category.name).join(', ')}`);
    console.log(`   –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${JSON.stringify(updatedCommunity.telegram)}`);
    console.log(`   –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: ${updatedCommunity.leader.name}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

testUpdateCommunity();
