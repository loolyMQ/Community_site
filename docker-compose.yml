version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: community_graph_db
    environment:
      POSTGRES_DB: community_graph
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - community_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: community_graph_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - community_network
    restart: unless-stopped

  # Backend API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: community_graph_api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/community_graph
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PORT: 3001
      CORS_ORIGIN: ${CORS_ORIGIN}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - community_network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: community_graph_frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_APP_NAME: Community Graph
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - community_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: community_graph_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    networks:
      - community_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  community_network:
    driver: bridge 